var fs = require('fs')

function writeRoutes() {

  var routes;

  try {
    routes = JSON.parse(fs.readFileSync(process.cwd() + '/app/routes.json'))
  } catch(e) {
    return;
  }

  var js = `// AUTOGENERATED - DO NOT EDIT
// Hack until System.import is ready in webpack 2
function _load(name) {
  return (...args) => new Promise( (resolve, reject) => {
    console.log('load page', name)
    switch(name) {
${ routes.map(d => `${ d.path === '*' ? '    default' : `     case './pages/${d.page}'`}:
      require.ensure([], (require) => resolve({ type: 'loadContent', data: require('./pages/${d.page}').default }))
      return`).join('\n') }
    }
  })
}

let System = { load: _load }


let routes = [
${ routes.map( d => `{
  path: '${d.path}',
  load: System.load('./pages/${d.page}')
}` ) }
]

module.exports = routes`

  fs.writeFileSync(process.cwd() + '/app/routes.js', js)
}

fs.watchFile(process.cwd() + '/app/routes.json', (curr, prev) => {
  writeRoutes()
});

writeRoutes()

module.exports = () => {}
